# 2. Дан список:
# ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
#
# Необходимо его обработать — обособить каждое целое число (вещественные не трогаем) кавычками (добавить кавычку до и
# кавычку после элемента списка, являющегося числом) и дополнить нулём до двух целочисленных разрядов:
# ['в', '"', '05', '"', 'часов', '"', '17', '"', 'минут', 'температура', 'воздуха', 'была', '"', '+05', '"', 'градусов']
#
# Сформировать из обработанного списка строку:
# в "05" часов "17" минут температура воздуха была "+05" градусов
#
# Подумать, какое условие записать, чтобы выявить числа среди элементов списка? Как модифицировать это условие для
# чисел со знаком?
# Примечание: если обособление чисел кавычками не будет получаться - можете вернуться к его реализации позже.
# Главное: дополнить числа до двух разрядов нулём!
#

my_list = ['в', '5', 'часов', '17', 'минут', 'температура', 'воздуха', 'была', '+5', 'градусов']
idx = 0
while idx < len(my_list):
# если элемент списка число,то:
    if my_list[idx].isdigit():
        # вставляем кавычки на место этого элемента
        my_list.insert(idx, '"')
        # обращаемся к элементу с учетом нового индекса и форматируем его в строку "00"
        my_list[idx + 1] = f'{int(my_list[idx + 1]):02}'
        # вставляем кавычки после нашего элемента
        my_list.insert(idx + 2, '"')
        # переходим к следующему по счету элементу, с учетом вставленных двойных кавычек.
        idx += 2
      # если элемент списка начинается с "+" или "-", и за ним в подстроке сразу следует число, то:
    elif (my_list[idx].startswith('+') or my_list[idx].startswith('-')) and\
        my_list[idx][1:].isdigit():
        # вставляем кавычки на место этого элемента
        my_list.insert(idx, '"')
        # обращаемся к элементу с учетом нового индекса, склеиваем его знак (посдтрока [0]) и переводим в формат "00"
        my_list[idx + 1] = f'{my_list[idx + 1][0]}{int(my_list[idx + 1]):02}'
        # вставляем кавычки после нашего элемента
        my_list.insert(idx + 2, '"')
        # переходим к следующему по счету элементу, с учетом вставленных двойных кавычек.
        idx += 2
    # если ни одно из условий не сработало (число или символы +/- с числом), то переходим к проверке следующего элементу
    else:idx += 1
# добавляем пробелы к элементам списка для лучшего отображения
result= " ".join(my_list[0:2]) + my_list[2] + " ".join(my_list[3:6]) + my_list[6] + \
        " ".join(my_list[7:13]) + my_list[13] + " ".join(my_list[14:16])

print(result)



